<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cssrc.ibms.core.msg.model.MessageSend">
	<resultMap id="MessageSend" type="com.cssrc.ibms.core.msg.model.MessageSend">
		<id property="id" column="id" jdbcType="NUMERIC" />
		<result property="subject" column="subject" jdbcType="VARCHAR" />
		<result property="userId" column="userId" jdbcType="NUMERIC" />
		<result property="userName" column="userName" jdbcType="VARCHAR" />
		<result property="messageType" column="messageType" jdbcType="VARCHAR" />
		<result property="content" column="content" jdbcType="CLOB" />
		<result property="sendTime" column="sendTime" jdbcType="TIMESTAMP" />
		<result property="canReply" column="canReply" jdbcType="NUMERIC" />
		<result property="receiverName" column="receiverName" jdbcType="CLOB" />
		<result property="attachment" column="attachment" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="columns">
		id,subject,userId,userName,messageType,content,sendTime,canReply,receiverName,attachment
	</sql>

	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND id =#{id} </if>
			<if test="@Ognl@isNotEmpty(subject)"> AND subject LIKE #{subject}  </if>
			<if test="@Ognl@isNotEmpty(userId)"> AND userId =#{userId} </if>
			<if test="@Ognl@isNotEmpty(userName)"> AND userName LIKE #{userName}  </if>
			<if test="@Ognl@isNotEmpty(messageType)"> AND messageType LIKE #{messageType}  </if>
			<if test="@Ognl@isNotEmpty(content)"> AND content LIKE #{content}  </if>
			<if test="@Ognl@isNotEmpty(beginsendTime)"> and sendTime>=#{beginsendTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endsendTime)"> and sendTime &lt;=#{endsendTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(canReply)"> AND canReply =#{canReply} </if>
			<if test="@Ognl@isNotEmpty(receiverName)"> AND receiverName LIKE #{receiverName} </if>
		</where>
	</sql>

	<sql id="sendDynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(subject)"> AND subject LIKE #{subject}  </if>
			<if test="@Ognl@isNotEmpty(userId)"> AND userId =#{userId} </if>
			<if test="@Ognl@isNotEmpty(messageType)"> AND messageType != #{messageType}  </if>
			<if test="@Ognl@isNotEmpty(beginsendTime)"> and sendTime>=#{beginsendTime,jdbcType=TIMESTAMP}</if>
			<if test="@Ognl@isNotEmpty(endsendTime)"> and sendTime &lt;=#{endsendTime,jdbcType=TIMESTAMP}</if>
		</where>
	</sql>

	<insert id="add" parameterType="com.cssrc.ibms.core.msg.model.MessageSend">
		INSERT INTO CWM_SYS_MSGSEND
		(
		<include refid="columns" />
		)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{subject,jdbcType=VARCHAR},
		#{userId,jdbcType=NUMERIC}, #{userName,jdbcType=VARCHAR},
		#{messageType,jdbcType=VARCHAR}, #{content,jdbcType=CLOB},
		#{sendTime,jdbcType=TIMESTAMP}, #{canReply,jdbcType=NUMERIC},
		#{receiverName,jdbcType=CLOB},#{attachment,jdbcType=VARCHAR})
	</insert>

	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM CWM_SYS_MSGSEND
		WHERE
		id=#{id}
	</delete>

	<update id="update" parameterType="com.cssrc.ibms.core.msg.model.MessageSend">
		UPDATE CWM_SYS_MSGSEND SET
		subject=#{subject,jdbcType=VARCHAR} ,
		userId=#{userId,jdbcType=NUMERIC} ,
		userName=#{userName,jdbcType=VARCHAR} ,
		messageType=#{messageType,jdbcType=VARCHAR} ,
		content=#{content,jdbcType=CLOB} ,
		sendTime=#{sendTime,jdbcType=TIMESTAMP} ,
		canReply=#{canReply,jdbcType=NUMERIC} ,
		receiverName=#{receiverName,jdbcType=CLOB},
		attachment=#{attachment,jdbcType=VARCHAR}
		WHERE
		id=#{id}
	</update>

	<select id="getById" parameterType="java.lang.Long" resultMap="MessageSend">
		SELECT
		<include refid="columns" />
		FROM CWM_SYS_MSGSEND
		WHERE
		id=#{id}
	</select>

	<select id="getAll" resultMap="MessageSend">
		SELECT
		<include refid="columns" />
		FROM CWM_SYS_MSGSEND
		<include refid="sendDynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
			order by sendtime desc
		</if>
	</select>

	<select id="getReceiverByUser" resultType="com.cssrc.ibms.core.msg.model.MessageSend">
		select
		send.id id,send.subject subject, send.userName userName,
		send.messageType messageType, send.sendTime sendTime,
		send.canReply canReply, send.receiverName receiverName, rece.id rid,
		red.receivetime,send.attachment
		from
		CWM_SYS_MSGSEND send
		left join CWM_SYS_MSGREAD red on send.id=red.messageid and
		red.RECEIVERID=#{receiverId} ,
		CWM_SYS_MSGRECEIVER rece
		where
		send.id=rece.messageid
		and (rece.receiverId in (select orgId from cwm_sys_user_position where
		userId = #{receiverId})
		or rece.receiverid=#{receiverId}
		)
		<if test="@Ognl@isNotEmpty(subject)"> AND send.subject LIKE #{subject} </if>
		<if test="@Ognl@isNotEmpty(messageType)"> AND send.messageType LIKE #{messageType} </if>
		<if test="@Ognl@isNotEmpty(beginreceiveTime)"> AND send.sendTime>=#{beginreceiveTime,jdbcType=TIMESTAMP}</if>
		<if test="@Ognl@isNotEmpty(endreceiveTime)"> AND send.sendTime
			&lt;=#{endreceiveTime,jdbcType=TIMESTAMP}</if>
		<if test="receiveTime == 1"> AND red.receiveTime is null  </if>
		<if test="receiveTime == 2"> AND red.receiveTime is not null </if>
		<if test="@Ognl@isNotEmpty(orderField)">
			order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
			order by send.sendtime desc
		</if>
	</select>

	<select id="getNotReadMsgByUserId" resultType="com.cssrc.ibms.core.msg.model.MessageSend">
		select a.id, a.subject, a.userName, a.messageType, a.sendTime, a.canReply,
		a.receiverName ,a.content,a.attachment
		from CWM_SYS_MSGSEND a,CWM_SYS_MSGRECEIVER b where a.id=b.messageid
		and (b.receiverid=#{receiverId} or b.receiverid in (select c.orgid from
		cwm_sys_user_position c where c.userid=#{receiverId}))
		and not exists
		(select 1 from CWM_SYS_MSGREAD d where a.id=d.messageid and
		d.receiverid=#{receiverId}) order by a.sendTime desc
	</select>

	<select id="getCountReceiverByUser" resultType="int">
		select
		count(1)
		num
		from
		CWM_SYS_MSGSEND send
		left join CWM_SYS_MSGREAD red on
		send.id=red.messageid and
		red.RECEIVERID=#{receiverId} ,
		CWM_SYS_MSGRECEIVER rece
		where
		send.id=rece.messageid
		and
		(rece.receiverId in (select orgId from cwm_sys_user_position where
		userId =
		#{receiverId})
		or rece.receiverid=#{receiverId}
		)
	</select>

	<select id="getCountNotReadMsg" resultType="int">
		select count(1) num
		from CWM_SYS_MSGSEND a,CWM_SYS_MSGRECEIVER b where a.id=b.messageid
		and (b.receiverid=#{receiverId} or b.receiverid in (select c.orgid from
		CWM_SYS_USER_POSITION c where c.userid=#{receiverId}))
		and not exists
		(select 1 from CWM_SYS_MSGREAD d where a.id=d.messageid and
		d.receiverid=#{receiverId})
	</select>



</mapper>
