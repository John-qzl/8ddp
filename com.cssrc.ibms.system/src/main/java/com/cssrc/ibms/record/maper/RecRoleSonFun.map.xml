<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.cssrc.ibms.record.model.RecRoleSonFun">
	<resultMap id="RecRoleSonFun" type="com.cssrc.ibms.record.model.RecRoleSonFun">
		<id property="roleSonFunId" column="roleSonFunId" jdbcType="NUMERIC"/>
		<result property="roleSonId" column="roleSonId" jdbcType="NUMERIC"/>
		<result property="funId" column="funId" jdbcType="NUMERIC"/>
		<result property="buttons" column="buttons" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		roleSonFunId,roleSonId,funId,buttons
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(roleSonFunId)"> AND roleSonFunId  =#{roleSonFunId} </if>
			<if test="@Ognl@isNotEmpty(roleSonId)"> AND roleSonId  =#{roleSonId} </if>
			<if test="@Ognl@isNotEmpty(funId)"> AND funId  =#{funId} </if>
			<if test="@Ognl@isNotEmpty(buttons)"> AND funId  =#{buttons} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.cssrc.ibms.record.model.RecRoleSonFun">
		INSERT INTO IBMS_REC_ROLESON_FUN
		(<include refid="columns"/>)
		VALUES
		(#{roleSonFunId,jdbcType=NUMERIC}, #{roleSonId,jdbcType=NUMERIC}, #{funId,jdbcType=NUMERIC}, #{buttons,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM IBMS_REC_ROLESON_FUN 
		WHERE
		roleSonFunId=#{roleSonFunId}
	</delete>
	
	<delete id="delByFunId" parameterType="java.lang.Long" >
		DELETE FROM  IBMS_REC_ROLESON_FUN  WHERE  funId=#{funId}
	</delete>
		
	<delete id="delByRoleSonId" parameterType="java.util.Map" >
		delete  FROM IBMS_REC_ROLESON_FUN  WHERE roleSonId=#{roleSonId}
	</delete>
	
	<delete id="delByRoleAndFun" parameterType="java.util.Map" >
		delete  FROM IBMS_REC_ROLESON_FUN  WHERE roleSonId in 
		<foreach close=")" collection="roleSonIds" item="roleSonId" open="(" 
			separator=",">#{roleSonId}</foreach>
		And funId in 
		 <foreach close=")" collection="funIds" item="funId" open="(" 
					separator=",">#{funId}</foreach>
	</delete>
	<update id="update" parameterType="com.cssrc.ibms.record.model.RecRoleSonFun">
		UPDATE IBMS_REC_ROLESON_FUN SET
		roleSonId=#{roleSonId,jdbcType=NUMERIC} , 
		funId=#{funId,jdbcType=NUMERIC} 
		WHERE
		roleSonFunId=#{roleSonFunId}
	</update>
	<update id="updateByRoleFunID" parameterType="com.cssrc.ibms.record.model.RecRoleSonFun">
		UPDATE IBMS_REC_ROLESON_FUN SET
		roleSonId=#{roleSonId,jdbcType=NUMERIC} , 
		funId=#{funId,jdbcType=NUMERIC} 
		WHERE
		roleSonFunId=#{roleSonFunId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="RecRoleSonFun">
		SELECT <include refid="columns"/>
		FROM IBMS_REC_ROLESON_FUN
		WHERE
		roleSonFunId=#{roleSonFunId}
	</select>
	
	<select id="getAll" resultMap="RecRoleSonFun">
		SELECT <include refid="columns"/>
		FROM IBMS_REC_ROLESON_FUN   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by roleSonFunId  desc
		</if>
	</select>	
	
	<select id="getByRoleSonId" parameterType="java.util.Map" resultMap="RecRoleSonFun">
		SELECT <include refid="columns"/>  
		FROM IBMS_REC_ROLESON_FUN  
		WHERE roleSonId=#{roleSonId}
	</select>
	
	<select id="getByfunId" parameterType="java.lang.Long" resultMap="RecRoleSonFun">
		SELECT <include refid="columns"/>
		FROM   IBMS_REC_ROLESON_FUN  
		WHERE  funId=#{funId}
	</select>
	<select id="getByFunAndRole" parameterType="java.util.Map" resultMap="RecRoleSonFun">
		SELECT <include refid="columns"/>
		FROM   IBMS_REC_ROLESON_FUN  
		WHERE  funId=#{funId} and roleSonId=#{roleSonId}
	</select>
	<select id="getByRoleAliasFun" parameterType="java.util.Map" resultMap="RecRoleSonFun">
		select rrsf.*  from ibms_rec_roleson_fun  rrsf
		left join ibms_rec_roleson rrs on rrs.ROLESONID = rrsf.ROLESONID
		where 
		rrs.ALIAS in (${roleAlias}) 
		and rrs.dataId = #{dataId}
		and funId= #{funId}
	</select>
</mapper>
